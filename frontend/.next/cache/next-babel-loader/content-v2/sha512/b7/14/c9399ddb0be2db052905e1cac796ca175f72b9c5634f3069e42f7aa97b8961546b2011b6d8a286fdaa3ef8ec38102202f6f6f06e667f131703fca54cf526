{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hp/Projects/upspring/frontend/components/records/TextField.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { ErrorMessage, useField } from 'formik';\nexport const TextField = (_ref) => {\n  let {\n    formik\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"formik\"]);\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread(_objectSpread({}, field), props), {}, {\n      className: ` form-control shadow-none ${meta.touched && meta.error && 'is-invalid mr-20'}`\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      name: field.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/hp/Projects/upspring/frontend/components/records/TextField.js"],"names":["React","ErrorMessage","useField","TextField","formik","props","field","meta","touched","error","name"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,QAAvC;AAGA,OAAO,MAAMC,SAAS,GAAG,UAA0B;AAAA,MAAzB;AAAEC,IAAAA;AAAF,GAAyB;AAAA,MAAZC,KAAY;;AACjD,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBL,QAAQ,CAACG,KAAD,CAA9B;AACA,sBACE;AAAA,4BACE,+DACMC,KADN,GACiBD,KADjB;AACwB,MAAA,SAAS,EAAG,6BAA4BE,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAArB,IAA8B,kBAAmB;AADjH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEH,KAAK,CAACI;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAVM","sourcesContent":["import React from 'react';\nimport { ErrorMessage, useField } from 'formik';\n\n\nexport const TextField = ({ formik, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div>\n      <input\n        {...field} {...props} className={` form-control shadow-none ${meta.touched && meta.error && 'is-invalid mr-20'}`}\n      />\n      <ErrorMessage name={field.name} />\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}