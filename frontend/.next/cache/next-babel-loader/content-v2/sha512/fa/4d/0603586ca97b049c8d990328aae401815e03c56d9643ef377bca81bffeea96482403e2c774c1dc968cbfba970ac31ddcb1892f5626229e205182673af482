{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hp/Projects/upspring/frontend/components/records/SignUPForm.js\";\nimport { useMutation } from 'react-query';\nimport Card from '../ui/Card';\nimport { Formik, Form } from 'formik';\nimport classes from './SignUpForm.module.css';\nimport * as Yup from 'yup';\nimport { TextField } from './TextField';\nimport { useQueryClient } from 'react-query';\n\nfunction SignUpForm() {\n  const initialValues = {\n    firstName: '',\n    lasName: '',\n    email: '',\n    password: ''\n  };\n  const queryClient = useQueryClient();\n\n  const addRecord = async enteredMeetupData => {\n    const response = await fetch('http://localhost:8080/users', {\n      method: 'POST',\n      body: JSON.stringify(enteredMeetupData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    queryClient.invalidateQueries(\"records\");\n    return data;\n  };\n\n  const mutation = useMutation(newRecord => addRecord(newRecord), {\n    mutationKey: \"signUp\"\n  });\n  const {\n    data,\n    isLoading,\n    isError,\n    error,\n    isSuccess\n  } = mutation;\n\n  function submitHandler(values) {\n    const meetupData = {\n      firstName: values.firstName,\n      lastName: values.lastName,\n      email: values.email,\n      password: values.password\n    };\n    mutation.mutate(meetupData);\n    var form = document.getElementById(\"myForm\");\n    form.reset();\n  }\n\n  const validate = Yup.object().shape({\n    firstName: Yup.string().min(2, \"Must be more then one character\").max(255).required('First Name is required'),\n    lastName: Yup.string().min(2, \"Must be more than 10 characters\").max(255),\n    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n    password: Yup.string().max(255).required('Password is required')\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validate,\n      onSubmit: values => submitHandler(values),\n      enableReinitialize: true,\n      validateOnMount: true,\n      children: formik => /*#__PURE__*/_jsxDEV(Form, {\n        className: classes.form,\n        id: \"myForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            name: \"firstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            name: \"lastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"Submit\",\n            disabled: !formik.isValid,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: classes.h4,\n            children: \"Already have an Account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: classes.a,\n            href: \"/login\",\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"An error occurred: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }, this), isSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\nexport default SignUpForm;","map":{"version":3,"sources":["/home/hp/Projects/upspring/frontend/components/records/SignUPForm.js"],"names":["useMutation","Card","Formik","Form","classes","Yup","TextField","useQueryClient","SignUpForm","initialValues","firstName","lasName","email","password","queryClient","addRecord","enteredMeetupData","response","fetch","method","body","JSON","stringify","headers","data","json","invalidateQueries","mutation","newRecord","mutationKey","isLoading","isError","error","isSuccess","submitHandler","values","meetupData","lastName","mutate","form","document","getElementById","reset","validate","object","shape","string","min","max","required","formik","control","actions","isValid","h4","a","message"],"mappings":"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","sourcesContent":["import { useMutation } from 'react-query';\nimport Card from '../ui/Card';\nimport { Formik, Form } from 'formik';\nimport classes from './SignUpForm.module.css';\nimport * as Yup from 'yup';\nimport { TextField } from './TextField';\nimport { useQueryClient } from 'react-query';\n\n\nfunction SignUpForm() {\n\n  const initialValues = {\n    firstName: '',\n    lasName: '',\n    email: '',\n    password: '',\n  }\n  const queryClient = useQueryClient();\n\n  const addRecord = async (enteredMeetupData) => {\n    const response = await fetch('http://localhost:8080/users', {\n      method: 'POST',\n      body: JSON.stringify(enteredMeetupData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    queryClient.invalidateQueries(\"records\");\n    return data;\n  }\n\n  const mutation = useMutation((newRecord) => addRecord(newRecord), { mutationKey: \"signUp\" });\n  const { data, isLoading, isError, error, isSuccess } = mutation;\n\n  function submitHandler(values) {\n    const meetupData = {\n      firstName: values.firstName,\n      lastName: values.lastName,\n      email: values.email,\n      password: values.password,\n\n    };\n    mutation.mutate(meetupData);\n    var form = document.getElementById(\"myForm\");\n    form.reset();\n  }\n\n  const validate = Yup.object().shape({\n    firstName: Yup.string().min(2, \"Must be more then one character\").max(255).required('First Name is required'),\n    lastName: Yup.string().min(2, \"Must be more than 10 characters\").max(255),\n    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n    password: Yup.string().max(255).required('Password is required'\n    )\n  });\n\n  return (\n    <Card>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validate}\n        onSubmit={(values) => submitHandler(values)}\n        enableReinitialize\n        validateOnMount\n      >\n        {formik => (\n          <Form className={classes.form} id='myForm'>\n            <div className={classes.control}>\n              <label htmlFor='name'>First Name</label>\n              <TextField type=\"text\" name=\"firstName\" />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor='name'>Last Name</label>\n              <TextField type=\"text\" name=\"lastName\" />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor='email'>Email</label>\n              <TextField type=\"email\" name=\"email\" />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor='password'>Password</label>\n              <TextField type=\"password\" name=\"password\" />\n            </div>\n            <div className={classes.actions}>\n              <button type=\"Submit\" disabled={!formik.isValid}>Sign up</button>\n            </div>\n            <div className={classes.control}>\n              <h4 className={classes.h4}>Already have an Account?</h4>\n              <a className={classes.a} href='/login'>login</a>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      {isError && <div>An error occurred: {error.message}</div>}\n\n      {isLoading && <div>Loading...</div>}\n\n      {isSuccess && <div>success</div>}\n\n      {data && <div>{data.message}</div>}\n    </Card>\n  );\n}\n\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}