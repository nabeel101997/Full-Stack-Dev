{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hp/Projects/upspring/frontend/store/auth-context.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nvar AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: function login(token) {},\n  logout: function logout() {}\n});\nexport var AuthContextProvider = function AuthContextProvider(props) {\n  _s();\n\n  var _useState = useState(null),\n      token = _useState[0],\n      setToken = _useState[1];\n\n  var userIsLoggedIn = !!token;\n\n  var loginHandler = function loginHandler(token) {\n    setToken(token);\n  };\n\n  var logoutHandler = function logoutHandler() {\n    setToken(null);\n  };\n\n  var contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(AuthContextProvider, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/hp/Projects/upspring/frontend/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","setToken","userIsLoggedIn","loginHandler","logoutHandler","contextValue","children"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,IAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,KAAK,EAAE,eAACF,KAAD,EAAW,CAAG,CAHiB;AAItCG,EAAAA,MAAM,EAAE,kBAAM,CAAG;AAJqB,CAApB,CAApB;AAOA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AAAA;;AAAA,kBAClBR,QAAQ,CAAC,IAAD,CADU;AAAA,MACrCG,KADqC;AAAA,MAC9BM,QAD8B;;AAG5C,MAAMC,cAAc,GAAG,CAAC,CAACP,KAAzB;;AAEA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,CAACR,KAAD,EAAW;AAC9BM,IAAAA,QAAQ,CAACN,KAAD,CAAR;AACD,GAFD;;AAIA,MAAMS,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAED,GAHD;;AAKA,MAAMI,YAAY,GAAG;AACnBV,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,UAAU,EAAEM,cAFO;AAGnBL,IAAAA,KAAK,EAAEM,YAHY;AAInBL,IAAAA,MAAM,EAAEM;AAJW,GAArB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,YAA7B;AAAA,cAA4CL,KAAK,CAACM;AAAlD;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAtBM;;GAAMP,mB;;KAAAA,mB;AAwBb,eAAeN,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst AuthContext = React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: (token) => { },\n  logout: () => { }\n})\n\nexport const AuthContextProvider = (props) => {\n  const [token, setToken] = useState(null)\n\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = (token) => {\n    setToken(token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    \n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  }\n\n  return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}