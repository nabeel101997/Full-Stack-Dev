{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/hp/Projects/upspring/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hp/Projects/upspring/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/hp/Projects/upspring/frontend/pages/profile.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport Dashboard from '../components/pages/Dashboard';\n\nfunction Dashboarda() {\n  _s();\n\n  var getRecords = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var token, headers, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              token = localStorage.getItem('accessToken');\n              headers = {\n                'Content-type': 'application/json',\n                'token': 'Bearer ' + token\n              };\n              _context.next = 4;\n              return fetch('http://localhost:8080/users', {\n                method: 'GET',\n                headers: headers\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context.sent;\n              console.log(\"Got Data\", data);\n              return _context.abrupt(\"return\", data);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getRecords() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useQuery = useQuery('records', getRecords),\n      data = _useQuery.data,\n      status = _useQuery.status;\n\n  console.log(\"data\", data);\n  console.log(\"status\", status);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dashboard, {\n      records: data === null || data === void 0 ? void 0 : data.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Dashboarda, \"r91jLNwsqTqZNm64JWU7RjPAH/8=\", false, function () {\n  return [useQuery];\n});\n\n_c = Dashboarda;\nexport default Dashboarda;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboarda\");","map":{"version":3,"sources":["/home/hp/Projects/upspring/frontend/pages/profile.js"],"names":["React","useQuery","Dashboard","Dashboarda","getRecords","token","localStorage","getItem","headers","fetch","method","response","json","data","console","log","status"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,MAAMC,UAAU;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,cAAAA,KADW,GACHC,YAAY,CAACC,OAAb,CAAqB,aAArB,CADG;AAEbC,cAAAA,OAFa,GAEH;AACZ,gCAAgB,kBADJ;AAEZ,yBAAS,YAAYH;AAFT,eAFG;AAAA;AAAA,qBAMMI,KAAK,CAAC,6BAAD,EAAgC;AAC1DC,gBAAAA,MAAM,EAAE,KADkD;AAE1DF,gBAAAA,OAAO,EAAEA;AAFiD,eAAhC,CANX;;AAAA;AAMXG,cAAAA,QANW;AAAA;AAAA,qBAUEA,QAAQ,CAACC,IAAT,EAVF;;AAAA;AAUXC,cAAAA,IAVW;AAWjBC,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;AAXiB,+CAYVA,IAZU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVT,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAFoB,kBAiBKH,QAAQ,CAAC,SAAD,EAAYG,UAAZ,CAjBb;AAAA,MAiBZS,IAjBY,aAiBZA,IAjBY;AAAA,MAiBNG,MAjBM,aAiBNA,MAjBM;;AAkBpBF,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,MAAtB;AAEA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEH,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;GA1BQV,U;UAiBkBF,Q;;;KAjBlBE,U;AA4BT,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from 'react-query';\nimport Dashboard from '../components/pages/Dashboard';\n\nfunction Dashboarda() {\n\n  const getRecords = async () => {\n    const token = localStorage.getItem('accessToken');\n    var headers = {\n      'Content-type': 'application/json',\n      'token': 'Bearer ' + token\n    }\n    const response = await fetch('http://localhost:8080/users', {\n      method: 'GET',\n      headers: headers\n    });\n    const data = await response.json();\n    console.log(\"Got Data\", data);\n    return data;\n  }\n\n  const { data, status } = useQuery('records', getRecords)\n  console.log(\"data\", data);\n  console.log(\"status\", status)\n\n  return (\n    <>\n      <Dashboard records={data?.data} />\n    </>\n  )\n}\n\nexport default Dashboarda;"]},"metadata":{},"sourceType":"module"}