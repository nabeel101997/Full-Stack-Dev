{"ast":null,"code":"import _regeneratorRuntime from \"/home/hp/Projects/upspring/frontend/node_modules/@babel/runtime/regenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/home/hp/Projects/upspring/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/hp/Projects/upspring/frontend/components/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useQueryClient, useMutation } from 'react-query';\nimport classes from './Dashboard.module.css';\nimport swal from 'sweetalert';\n\nfunction Dashboard(props) {\n  _s();\n\n  var _this = this;\n\n  var data = props.data;\n  console.log(data);\n  var queryClient = useQueryClient();\n\n  function editHandler(record) {\n    props.editRecod({\n      id: record._id,\n      name: record.name\n    });\n  }\n\n  function deleteHandler(_x) {\n    return _deleteHandler.apply(this, arguments);\n  }\n\n  function _deleteHandler() {\n    _deleteHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(record) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              swal({\n                title: \"Are you sure?\",\n                text: \"Once deleted, you will not be able to recover this Record!\",\n                icon: \"warning\",\n                buttons: true,\n                dangerMode: true\n              }).then( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(willDelete) {\n                  var response, _data;\n\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!willDelete) {\n                            _context.next = 12;\n                            break;\n                          }\n\n                          _context.next = 3;\n                          return fetch('/api/delete-record', {\n                            method: 'DELETE',\n                            body: JSON.stringify(record),\n                            headers: {\n                              'Content-Type': 'application/json'\n                            }\n                          });\n\n                        case 3:\n                          response = _context.sent;\n                          swal(\"Poof! Your Record has been deleted!\", {\n                            icon: \"success\"\n                          });\n                          _context.next = 7;\n                          return response.json();\n\n                        case 7:\n                          _data = _context.sent;\n                          queryClient.invalidateQueries(\"records\");\n                          return _context.abrupt(\"return\", _data);\n\n                        case 12:\n                          swal(\"Your Record is safe!\");\n\n                        case 13:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _deleteHandler.apply(this, arguments);\n  }\n\n  var mutation = useMutation(function (record) {\n    return deleteHandler(record);\n  }, {\n    mutationKey: \"delete\"\n  });\n  var isLoading = mutation.isLoading,\n      isError = mutation.isError,\n      error = mutation.error,\n      isSuccess = mutation.isSuccess;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"An error occurred: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this), isSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: classes.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: classes.th,\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: classes.th,\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: classes.th,\n            children: \"Permissions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: classes.th,\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(function (record) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: classes.td,\n              children: record.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: classes.td,\n              children: record.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: classes.td,\n              children: record.permissions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: classes.td,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: classes.button,\n                onClick: function onClick() {\n                  return editHandler(record);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: (classes.button, classes.mr20),\n                onClick: function onClick() {\n                  return mutation.mutate(record);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, _this)]\n          }, record._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"mUUakYvFQSudGRmMzZErOI9nuuc=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/hp/Projects/upspring/frontend/components/pages/Dashboard.js"],"names":["useQueryClient","useMutation","classes","swal","Dashboard","props","data","console","log","queryClient","editHandler","record","editRecod","id","_id","name","deleteHandler","title","text","icon","buttons","dangerMode","then","willDelete","fetch","method","body","JSON","stringify","headers","response","json","invalidateQueries","mutation","mutationKey","isLoading","isError","error","isSuccess","message","table","th","map","td","role","permissions","button","mr20","mutate"],"mappings":"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","sourcesContent":["import { useQueryClient, useMutation } from 'react-query';\nimport classes from './Dashboard.module.css';\nimport swal from 'sweetalert';\n\n\nfunction Dashboard(props) {\n  const data = props.data;\n  console.log(data);\n  const queryClient = useQueryClient();\n  function editHandler(record) {\n    props.editRecod({\n      id: record._id,\n      name: record.name,\n    });\n  }\n\n  async function deleteHandler(record) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this Record!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n      .then(async (willDelete) => {\n        if (willDelete) {\n          const response = await fetch('/api/delete-record', {\n            method: 'DELETE',\n            body: JSON.stringify(record),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          swal(\"Poof! Your Record has been deleted!\", {\n            icon: \"success\",\n          });\n          const data = await response.json();\n          queryClient.invalidateQueries(\"records\")\n          return data;\n        } else {\n          swal(\"Your Record is safe!\");\n        }\n      });\n  }\n\n  const mutation = useMutation((record) => deleteHandler(record), { mutationKey: \"delete\" });\n  const { isLoading, isError, error, isSuccess } = mutation;\n\n  return (\n    <>\n      {isError && <div>An error occurred: {error.message}</div>}\n\n      {isLoading && <div>Loading...</div>}\n\n      {isSuccess && <div>success</div>}\n      <table className={classes.table}>\n        <thead>\n          <tr>\n            <th className={classes.th}>User Name</th>\n            <th className={classes.th} >Role</th>\n            <th className={classes.th}>Permissions</th>\n            <th className={classes.th}>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((record) => (\n            <tr key={record._id}>\n              <td className={classes.td}>{record.name}</td>\n              <td className={classes.td}>{record.role}</td>\n              <td className={classes.td}>{record.permissions}</td>\n              <td className={classes.td}>\n                <button className={classes.button} onClick={() => editHandler(record)}>Edit</button>\n                <button className={classes.button, classes.mr20} onClick={() => mutation.mutate(record)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}