(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react')) :
  typeof define === 'function' && define.amd ? define(['react'], factory) :
  (global.useQuery = factory(global.react));
}(this, (function (react) { 'use strict';

  function useQuery(fn, args) {
      var _a = react.useState({
          loading: true,
          data: null,
          error: null
      }), state = _a[0], setState = _a[1];
      var memoized = react.useMemo(fn, args);
      react.useEffect(function () {
          Promise.resolve(memoized).then(function (data) { return setState({ loading: false, data: data, error: null }); }, function (error) { return setState({ loading: false, data: null, error: error }); });
      }, [memoized]);
      return state;
  }

  return useQuery;

})));
//# sourceMappingURL=use-query.umd.js.map
